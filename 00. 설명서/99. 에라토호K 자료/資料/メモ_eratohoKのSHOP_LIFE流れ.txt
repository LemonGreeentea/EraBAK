■메모_eratohoK의 SHOP_LIFE 흐름

	2017/03/07
	변경한 내용을 포함해, 파악하고 있는 대범한 흐름을 정리했습니다.
	뭔가 실수가 있으면 미안합니다.

-------------------------------------------------
●SHOP_LIFE.ERB
-------------------------------------------------
	거점（LIFE）의 메인 처리가 정리된 파일.

	Emuera에서는 로드 후와 BEGIN SHOP 실행 후
	@SHOW_SHOP가 불린다
	　　　├─@EVENTBUY  입력치가 0～99였던 경우가 불린다（본래는 구입 처리）
	　　　└─@USERSHOP  입력치가 100이상이었던 경우가 불린다

	이 3개의 함수 중(안)에서, 거점（LIFE）와 전략（SLG）에 분기 하고 있다.

	SHOP_LIFE.ERB는 그 거점 부분에서, 구조는 SHOP.ERB와 대체로 같게 되어 있다.

	@SHOW_SHOP_LIFE  @SHOW_SHOP로부터 거점 페이즈 때 불린다
	　　　├─@EVENTBUY_LIFE  @EVENTBUY로부터 입력치가 0～99였던 경우 불린다
	　　　└─@USERSHOP_LIFE  @USERSHOP로부터 입력치가 100이상이었던 경우 불린다

	@USERSHOP_LIFE는 더욱, 입력치에 의해 이하에 헤어진다.
	100～ 리스트 1  캐릭터 리스트 혹은 2 단나누기 캐릭터 리스트의 상단
	1100～리스트 2  2 단나누기 캐릭터 리스트의 하단

	@USERSHOP_LIFE
	　　　├─캐릭터 리스트를 사용하지 않는다
	　　　└─캐릭터 리스트를 사용한다
	　　　　　　　├─@USERSHOP_LIFE_CHARA1
	　　　　　　　│　　입력치가 100+CSV 번호 때-100을 캐릭터 번호로 변환해
	　　　　　　　│　　캐릭터 리스트 1 입력 처리를 불러
	　　　　　　　│　　캐릭터 번호외의 에러 퇴피 따위의 처리를 실시한다
	　　　　　　　└─@USERSHOP_LIFE_CHARA2
	　　　　　　　　　　입력치가 1100+CSV 번호 때-1100을 캐릭터 번호로 변환해
	　　　　　　　　　　캐릭터 리스트 2 입력 처리를 불러〃

	각각, 각 메뉴 커맨드의 파일에 배치되었다
	표시 처리나 입력 처리를 호출하고 있다.

	불려 가는 측의 함수는 「SHOP_LIFE11_만나러간다. ERB」에 정리하고 있다.


-------------------------------------------------
●@SHOW_SHOP_LIFE
-------------------------------------------------
	각종 리셋트를 실시해, 좌우 컬럼을 표시한다.

	리셋트 하는 것
		LOCAL 변수
		메뉴 커맨드의 선택 가부 판정
		캐릭터 리스트의 표시순서 설정
		조교 참가 플래그

	여기서 실시하는 처리는, FLAG:거점 페이즈 선택 커맨드를 바탕으로
	왼쪽 컬럼에게는 메뉴 커맨드 표시를
	오른쪽 컬럼에게는 내용 표시를 일행 마다 교대로 표시해 나가는 것.

	실제의 처리는 각 메뉴 커맨드의 파일에 배치된 표시 처리
	@SHOP_LIFE_EVENTBUY_SHOW{FLAG:거점 페이즈 선택 커맨드}에 분해되고 있다.
	의로, 그것을 호출한다.

	왼쪽 컬럼의 메뉴 커맨드 표시는 자동화되고 있다.
	정확하게는 오른쪽 컬럼의 개행 함수（@COLUMN_RIGHT_PRINTL）에 포함되어지고 있으므로
	이것을 사용하면 오른쪽 컬럼의 표시 내용에 좁히고 생각할 수가 있다.

	FLAG:거점 페이즈 선택 커맨드가 메뉴 번호외 때나
	선택중의 메뉴가 선택 불가능하게 되었을 때는 오른쪽 컬럼은 우츠호 흰색이 된다.


-------------------------------------------------
●@EVENTBUY_LIFE（0～99）……입력치의 취급 내역
-------------------------------------------------
	입력치 0～99를 받는다.
	숫자는 이하같이 할당하고 있다.

   0～9번）오른쪽 컬럼의 버튼에 자유롭게 사용할 수 있도록(듯이)（캐릭터 리스트의 보좌 버튼）

 11～79번）메뉴 번호
 　　　　　10의 위를 카테고리 번호에, 1～9를 메뉴 번호로 하면
 　　　　　COMF같이 자동적으로 읽힌다.
 　　　　　다만 행수가 넘쳤을 경우의 처리는 하고 있지 않기 때문에 요점 확인.

 　　81번）고정행·휴식
 　　　　　80 접수대를 독점하고 있어 한 번 더 없다.
 　　　　　우선 페이지 번호는 알기 쉬운 90번대로 했지만
 　　　　　90 접수대가 부족한다면 96～99는 80 접수대로 변경하면내림.

   91～차례）고정행·설정계
 　　　　　91 설정·92 세이브·93 로드·94 QSAVE·95 QLOAD
 　　　　　96 오른쪽 컬럼 리스트 2 전페이지·97 오른쪽 컬럼 리스트 2차 페이지
 　　　　　98 오른쪽 컬럼 리스트 1 전페이지·99 오른쪽 컬럼 리스트 1차 페이지

	※가능한 한 1 오리진으로 설정했기 때문에, 20번, 30번, 40번... 등이 우츠호 란이 되어 있지만
		카테고리의 보존등에 이용 되거나 할지도 모르기 때문에
		버튼에 사용하거나는 현재 하지 않도록 하고 있다.


-------------------------------------------------
●@USERSHOP_LIFE（100～）……입력치의 취급 내역
-------------------------------------------------
	입력치 100～를 받는다.

	기본적으로 캐릭터 리스트로부터 받은 입력치를
	캐릭터 번호로 변환하고 받는다.

	그렇게 하고 싶지 않은 경우는
	각 메뉴 커맨드의 파일에 판정용 함수를 배치하면
	입력치를 그대로 받을게요 게 바뀐다.

	0 캐릭터 리스트를 사용하는 경우

		※캐릭터 번호 범위외 에러의 퇴피 처리를 통과한다.

		·CSV 번호 + 100을 캐릭터 리스트 1의 버튼 번호로 한다.
			각 메뉴의 리스트 1 입력 처리 함수
			@SHOP_LIFE_USERSHOP{메뉴 번호}(NO_TO_CHARA(입력치-100))를 부른다.

		·CSV 번호 + 1100을 캐릭터 리스트 2의 버튼 번호로 한다.
			각 메뉴의 리스트 2 입력 처리 함수
			@SHOP_LIFE_USERSHOP{메뉴 번호}(NO_TO_CHARA(입력치-1100))를 부른다.

		이 100이라든지 1100이라든지의 값은 SHOP_LIFE_VARIABLE.ERH↓로 정수를 선언해 사용하도록(듯이)했다.
		#DIM CONST SHOP_LIFE_LIST1_ADD_INPUT = 100
		#DIM CONST SHOP_LIFE_LIST2_ADD_INPUT = 1100

	0 캐릭터 리스트를 사용하지 않는 경우

		※캐릭터 번호 범위외 에러의 퇴피 처리를 통하지 않다.
			버튼 번호로부터 캐릭터 번호를 줍거나 하는 경우,
			캐릭터 번호외 에러의 퇴피 처리를 만들어 두지 않으면
			손입력을 했을 때（번호가 외관인 있고 것으로 하는 사람은 적다고 생각하지만）에러가 나온다.

		·입력치를 그대로 받는다
			각 메뉴의 리스트 1 입력 처리 함수
			@SHOP_LIFE_USERSHOP{메뉴 번호}(입력치)를 부른다.


-----------------------------
��@USERSHOP_LIFE�i100�`�j�c�c���͒l�̈������
-------------------------------------------------
	���͒l100�`��󂯎��B

	��{�I�ɃL�������X�g����󂯎�������͒l��
	�L�����ԍ��ɕϊ����Ď󂯎��B

	�����������Ȃ��ꍇ��
	�e���j���[�R�}���h�̃t�@�C���ɔ���p�֐���z�u�����
	���͒l����̂܂܎󂯎��悤�ɕς��B

	�Z�L�������X�g��g�p����ꍇ

		���L�����ԍ��͈͊O�G���[�̑ޔ������ʂ�B

		�ECSV�ԍ� + 100 ��L�������X�g�P�̃{�^���ԍ��Ƃ���B
			�e���j���[�̃��X�g�P���͏����֐�
			@SHOP_LIFE_USERSHOP{���j���[�ԍ�}(NO_TO_CHARA(���͒l-100))��ĂԁB

		�ECSV�ԍ� + 1100 ��L�������X�g�Q�̃{�^���ԍ��Ƃ���B
			�e���j���[�̃��X�g�Q���͏����֐�
			@SHOP_LIFE_USERSHOP{���j���[�ԍ�}(NO_TO_CHARA(���͒l-1100))��ĂԁB

		����100�Ƃ�1100�Ƃ��̒l��SHOP_LIFE_VARIABLE.ERH���Œ萔��錾���Ďg���悤�ɂ����B
		#DIM CONST SHOP_LIFE_LIST1_ADD_INPUT = 100
		#DIM CONST SHOP_LIFE_LIST2_ADD_INPUT = 1100

	�Z�L�������X�g��g�p���Ȃ��ꍇ

		���L�����ԍ��͈͊O�G���[�̑ޔ������ʂ�Ȃ��B
			�{�^���ԍ�����L�����ԍ���E�����肷��ꍇ�A
			�L�����ԍ��O�G���[�̑ޔ���������Ă����Ȃ���
			����͂�����Ƃ��i�ԍ��������Ȃ��̂ł���l�͏��Ȃ��Ǝv�����j�G���[���o��B

		�E���͒l����̂܂܎󂯎��
			�e���j���[�̃��X�g�P���͏����֐�
			@SHOP_LIFE_USERSHOP{���j���[�ԍ�}(���͒l)��ĂԁB


