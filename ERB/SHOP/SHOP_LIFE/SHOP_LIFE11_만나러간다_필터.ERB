;-------------------------------------------------
;「만나러간다」의 추가 체크
;-------------------------------------------------
@SHOP_LIFE_CHECK_ADDITIONAL_CHECK11()
#DIM 플래그
#DIM BACKUP_FILTER_MODE

; 「필터의 조건에 일치하는 캐릭터가 없는 경우에 메뉴가 표시되지 않게 된다」를 막는다.
; 언제라도 메뉴를 표시한다면, RETURN 1으로 괜찮지만.

BACKUP_FILTER_MODE = SHOP_LIFE_11_FILTER_MODE
SHOP_LIFE_11_FILTER_MODE = 0

플래그 = 0
FOR LOCAL, 0, CHARANUM
	RESULT = 0
	CALL SHOP_LIFE_CHECKCHARA11(LOCAL)
	;이 캐릭터는 0:선택 불가로 비표시 1:선택가능 2:선택 불가색으로 표시의 어떤 것인가가 돌아온다
	IF RESULT == 1
		플래그 = 1
		BREAK
	ENDIF
NEXT

SHOP_LIFE_11_FILTER_MODE = BACKUP_FILTER_MODE

RETURN 플래그

@SHOP_LIFE_11_GET_FILTER_MODE
#FUNCTIONS

SIF SHOP_LIFE_11_FILTER_MODE
	RETURNF "필터" + TOSTR(SHOP_LIFE_11_FILTER_MODE)

RETURNF "필터 OFF"

@SHOP_LIFE_11_SET_FILTER
#DIMS NAM
#DIM DMY
#DIM VAL_NOW
#DIM FIRST_LINE
#DIM ITM
#DIM VAL
#DIM I1
#DIM I2

SIF !SHOP_LIFE_11_FILTER_MODE
	SHOP_LIFE_11_FILTER_MODE = 1

REDRAW 0

CALL SINGLE_DRAWLINE
PRINTFORML 필터{SHOP_LIFE_11_FILTER_MODE}설정
CALL SINGLE_DRAWLINE
FIRST_LINE = LINECOUNT
$SHOW_LOOP

FOR LOCAL, 0, VARSIZE("SHOP_LIFE_11_FILTER", 1) + 1
	IF LOCAL == VARSIZE("SHOP_LIFE_11_FILTER", 1)
		PRINTL
		NAM = 일괄설정
		VAL_NOW = -1
	ELSE
		DMY = SHOP_LIFE_11_GET_FILTER_ITEM(0, LOCAL, NAM)
		VAL_NOW = SHOP_LIFE_11_FILTER:(SHOP_LIFE_11_FILTER_MODE):LOCAL
	ENDIF
	SIF NAM == ""
		CONTINUE
	CALL PRINT_SELECT_BUTTON("  { 둘다 }", LOCAL * 10 + 0, VAL_NOW == 0)
	CALL PRINT_SELECT_BUTTON("  {○ONLY}", LOCAL * 10 + 1, VAL_NOW == 1)
	CALL PRINT_SELECT_BUTTON("  {×ONLY}", LOCAL * 10 + 2, VAL_NOW == 2)
	PRINTFORML     %NAM%
NEXT
PRINTL
PRINTL [9] OK

$INPUT_LOOP
INPUT

ITM = RESULT / 10
VAL = RESULT % 10

IF RESULT == 9
	REDRAW 1
	RETURN
ELSEIF VAL >= 0 && VAL <= 2
	IF ITM >= 0 && ITM < VARSIZE("SHOP_LIFE_11_FILTER", 1)
		I1 = ITM
		I2 = ITM + 1
	ELSE
		I1 = 0
		I2 = VARSIZE("SHOP_LIFE_11_FILTER", 1)
	ENDIF
	FOR LOCAL, I1, I2
		SHOP_LIFE_11_FILTER:(SHOP_LIFE_11_FILTER_MODE):LOCAL = VAL
	NEXT
	CLEARLINE LINECOUNT - FIRST_LINE
	GOTO SHOW_LOOP
ENDIF

CLEARLINE 1
GOTO INPUT_LOOP

@SHOP_LIFE_11_GET_FILTER(CHARA)
#FUNCTION
#DIM CHARA
#DIMS NAM

SIF !SHOP_LIFE_11_FILTER_MODE
	RETURNF 1

FOR LOCAL, 0, VARSIZE("SHOP_LIFE_11_FILTER", 1)
	SELECTCASE SHOP_LIFE_11_FILTER:(SHOP_LIFE_11_FILTER_MODE):LOCAL
		CASE 1
			SIF !SHOP_LIFE_11_GET_FILTER_ITEM(CHARA, LOCAL, NAM) && NAM != ""
				RETURNF 0
		CASE 2
			SIF SHOP_LIFE_11_GET_FILTER_ITEM(CHARA, LOCAL, NAM) && NAM != ""
				RETURNF 0
	ENDSELECT
NEXT

RETURNF 1


@SHOP_LIFE_11_GET_FILTER_ITEM(CHARA, IDX, NAM)
#FUNCTION
#DIM CHARA
#DIM IDX
#DIMS REF NAM
#DIM FILT

; 호출측의 상황에 따라서는, 항목명밖에 사용하지 않는 것도 있고, 필터 결과밖에 사용하지 않는 것도 있다.
; 하지만, 항목명과 필터 결과는 세트로 기술하는 편을 알 수 있기 쉽다고 생각한다.

SELECTCASE IDX
	CASE 0
		NAM = 고정캐릭터
		FILT = IS_FIXED_CHARA(CHARA)
	CASE 1
		NAM = 랜덤캐릭터
		FILT = IS_RANDOM_CHARA(CHARA)
	CASE 2
		NAM = 아이캐릭터
		FILT = IS_CHILD(CHARA)
	CASE 3
		NAM = 특수캐릭터
		FILT = IS_SP_CHARA(CHARA)
	CASE 4
		; 연모도 복종도 없음으로 연인이나 낙인이 붙을 가능성도 있으므로, @IS_LOVER나@IS_SLAVE는 사용하지 않기로 한다
		NAM = 연모또는복종또는주인
		FILT = TALENT:CHARA:연모 || TALENT:CHARA:복종 || TALENT:CHARA:주인
	CASE 5
		; OR검색을 할 수 있으면, CASE 5는 불필요할 것이지만 말야. CASE 6으로 CASE 7의 OR로 실현될 수 있기에.
		NAM = 특수세력에의함락
		FILT = TALENT:CHARA:특수세력함락계
	CASE 6
		NAM = 특수세력（주인공소속세력）에의함락
		FILT = IS_SP_COUNTRY(CFLAG:MASTER:소속) && GETBIT(TALENT:CHARA:특수세력함락계, SP_COUNTRY_TO_CONST(CFLAG:MASTER:소속))
	CASE 7
		NAM = 특수세력（주인공소속세력이외）에의함락
		FILT = 0
		FOR LOCAL, 0, MAX_SP_COUNTRY
			IF LOCAL != SP_COUNTRY_TO_CONST(CFLAG:MASTER:소속) && GETBIT(TALENT:CHARA:특수세력함락계, LOCAL)
				FILT = 1
				BREAK
			ENDIF
		NEXT
	CASE 8
		NAM = 포로
		FILT = CFLAG:CHARA:포로처
	CASEELSE
		NAM = 
		FILT = 0
ENDSELECT

RETURNF FILT

